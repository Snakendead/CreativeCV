//
//  {{ module_info.name }}{{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright Â© {{ year }} {{ developer.company }}. All rights reserved.
//

import Foundation

class {{ module_info.name }}Presenter: NSObject, {{ module_info.name }}ViewOutput, {{ module_info.name }}InteractorOutput {

    weak var collectionMediator: {{ module_info.name }}CollectionMediator!
    weak var viewInput: {{ module_info.name }}ViewInput!

    var interactor: {{ module_info.name }}InteractorInput!

    init(viewInput: {{ module_info.name }}ViewInput, collectionMediator: {{ module_info.name }}CollectionMediator) {
        super.init()
        self.viewInput = viewInput
        self.interactor = {{ module_info.name }}Interactor(output: self)
        self.collectionMediator = collectionMediator
        
        initialize()
        setupDependencies()
    }
    
    func initialize() {

    }

    func setupDependencies() {
        collectionMediator.fillCellData = {
            [weak self]
            (cellInput, indexPath) in
            guard let self_ = self else { return }
//            _ = self_.collectionData[indexPath.row]

        }

        collectionMediator.cellSelectionClosure = {
            [weak self]
            (indexPath) in
            guard let self_ = self else { return }
//            _ = self_.collectionData[indexPath.row]

        }

        collectionMediator.dataCount = 0
    }

    //MARK: {{ module_info.name }}InteractorOutput methods

    internal func viewIsReady() {

    }

    internal func viewWillAppear() {

    }

    //MARK:

    internal func getViewLayer() -> Any {
        return viewInput
    }
}
